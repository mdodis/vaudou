"#version 450\n"
"#extension GL_EXT_buffer_reference : require\n"
"#extension GL_GOOGLE_include_directive : require\n"
"#include \"vd.glsl\"\n"
"\n"
"//shader input\n"
"layout (location = 0) in vec3 inColor;\n"
"layout (location = 1) in vec2 inUV;\n"
"layout (location = 2) in vec3 inNormal;\n"
"layout (location = 3) in vec3 inWorldPos;\n"
"\n"
"//output write\n"
"layout (location = 0) out vec4 outFragColor;\n"
"\n"
"layout (set = 1, binding = 0) uniform sampler2D dsTexture;\n"
"\n"
"void main() \n"
"{\n"
"    vec3 diffuseColor = texture(dsTexture, inUV).xyz;\n"
"    float roughness = 0.4 * 0.4;\n"
"    float metallic = 0.8;\n"
"    vec3 Lo = vec3(0.0);\n"
"\n"
"    {\n"
"        vec3 v = normalize(eye_position() - inWorldPos);\n"
"        vec3 n = inNormal;\n"
"        vec3 l = normalize(-vd_scene_data.sun_direction);\n"
"        vec3 h = normalize(l + v);\n"
"\n"
"        float NoV = abs(dot(n, v)) + 1e-5;\n"
"        float NoL = clamp(dot(n, l), 0.0, 1.0);\n"
"        float NoH = clamp(dot(n, h), 0.0, 1.0);\n"
"        float LoH = clamp(dot(l, h), 0.0, 1.0);\n"
"        float HoV = clamp(dot(h, v), 0.0, 1.0);\n"
"\n"
"        float f0 = 0.04;\n"
"        float D = d_ggx(NoH, roughness);\n"
"        float V = v_smithggx_correlated(NoV, NoL, roughness);\n"
"        vec3  F = f_schlick(HoV, vec3(f0));\n"
"\n"
"        vec3 Fr = (D * V) * F;\n"
"        float denom = 4.0 * NoV * NoL + 0.0001;\n"
"        Fr = Fr / denom;\n"
"\n"
"        vec3 Fd = diffuseColor * fd_lambert();\n"
"\n"
"        vec3 kS = F;\n"
"\n"
"        vec3 kD = vec3(1.0) - kS;\n"
"        kD *= 1.0 - metallic;\n"
"\n"
"        vec3 radiance = vec3(1,1,1);\n"
"        Lo += ((kD * Fd) + Fr) * radiance * NoL;\n"
"    }\n"
"\n"
"    vec3 ambient = vec3(0.09) * diffuseColor;\n"
"    Lo += ambient;\n"
"\n"
"    vec3 color = Lo;\n"
"\n"
"    color = color / (color + vec3(1.0));\n"
"    color = pow(color, vec3(1.0/2.2));\n"
"    // outFragColor = texture(dsTexture, inUV);\n"
"    outFragColor = vec4(Lo, 1.0);\n"
"}\n"
"";
