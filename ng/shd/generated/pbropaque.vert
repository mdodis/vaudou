"#version 450\n"
"#extension GL_EXT_buffer_reference : require\n"
"#extension GL_GOOGLE_include_directive : require\n"
"#include \"vd.glsl\"\n"
"\n"
"\n"
"layout (location = 0) out vec3 outColor;\n"
"layout (location = 1) out vec2 outUV;\n"
"\n"
"struct Vertex {\n"
"\n"
"	vec3 position;\n"
"	float uv_x;\n"
"	vec3 normal;\n"
"	float uv_y;\n"
"	vec4 color;\n"
"}; \n"
"\n"
"layout(buffer_reference, std430) readonly buffer VertexBuffer {\n"
"	Vertex vertices[];\n"
"};\n"
"\n"
"//push constants block\n"
"layout( push_constant ) uniform constants\n"
"{	\n"
"	mat4 render_matrix;\n"
"	VertexBuffer vertexBuffer;\n"
"} PushConstants;\n"
"\n"
"void main() \n"
"{	\n"
"	//load vertex data from device adress\n"
"	Vertex v = PushConstants.vertexBuffer.vertices[gl_VertexIndex];\n"
"\n"
"	//output data\n"
"	gl_Position = PushConstants.render_matrix *vec4(v.position, 1.0f);\n"
"	// outColor = v.color.xyz;\n"
"	outColor = vec3(v.uv_x, v.uv_y, 1.0f);\n"
"	outUV.x = v.uv_x;\n"
"	outUV.y = v.uv_y;\n"
"}\n"
"";
